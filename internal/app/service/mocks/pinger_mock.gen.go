// Code generated by MockGen. DO NOT EDIT.
// Source: pinger.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPingerServ is a mock of PingerServ interface.
type MockPingerServ struct {
	ctrl     *gomock.Controller
	recorder *MockPingerServMockRecorder
}

// MockPingerServMockRecorder is the mock recorder for MockPingerServ.
type MockPingerServMockRecorder struct {
	mock *MockPingerServ
}

// NewMockPingerServ creates a new mock instance.
func NewMockPingerServ(ctrl *gomock.Controller) *MockPingerServ {
	mock := &MockPingerServ{ctrl: ctrl}
	mock.recorder = &MockPingerServMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPingerServ) EXPECT() *MockPingerServMockRecorder {
	return m.recorder
}

// PingPg mocks base method.
func (m *MockPingerServ) PingPg(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingPg", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// PingPg indicates an expected call of PingPg.
func (mr *MockPingerServMockRecorder) PingPg(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingPg", reflect.TypeOf((*MockPingerServ)(nil).PingPg), ctx)
}
