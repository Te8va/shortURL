// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Te8va/shortURL/internal/app/service (interfaces: URLDelete)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockURLDelete is a mock of URLDelete interface.
type MockURLDelete struct {
	ctrl     *gomock.Controller
	recorder *MockURLDeleteMockRecorder
}

// MockURLDeleteMockRecorder is the mock recorder for MockURLDelete.
type MockURLDeleteMockRecorder struct {
	mock *MockURLDelete
}

// NewMockURLDelete creates a new mock instance.
func NewMockURLDelete(ctrl *gomock.Controller) *MockURLDelete {
	mock := &MockURLDelete{ctrl: ctrl}
	mock.recorder = &MockURLDeleteMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLDelete) EXPECT() *MockURLDeleteMockRecorder {
	return m.recorder
}

// DeleteUserURLs mocks base method.
func (m *MockURLDelete) DeleteUserURLs(arg0 context.Context, arg1 []string, arg2 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUserURLs", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUserURLs indicates an expected call of DeleteUserURLs.
func (mr *MockURLDeleteMockRecorder) DeleteUserURLs(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUserURLs", reflect.TypeOf((*MockURLDelete)(nil).DeleteUserURLs), arg0, arg1, arg2)
}
