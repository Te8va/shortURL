// Code generated by MockGen. DO NOT EDIT.
// Source: deleter.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockURLDeleteServ is a mock of URLDeleteServ interface.
type MockURLDeleteServ struct {
	ctrl     *gomock.Controller
	recorder *MockURLDeleteServMockRecorder
}

// MockURLDeleteServMockRecorder is the mock recorder for MockURLDeleteServ.
type MockURLDeleteServMockRecorder struct {
	mock *MockURLDeleteServ
}

// NewMockURLDeleteServ creates a new mock instance.
func NewMockURLDeleteServ(ctrl *gomock.Controller) *MockURLDeleteServ {
	mock := &MockURLDeleteServ{ctrl: ctrl}
	mock.recorder = &MockURLDeleteServMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLDeleteServ) EXPECT() *MockURLDeleteServMockRecorder {
	return m.recorder
}

// DeleteUserURLs mocks base method.
func (m *MockURLDeleteServ) DeleteUserURLs(ctx context.Context, ids []string, userID int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUserURLs", ctx, ids, userID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUserURLs indicates an expected call of DeleteUserURLs.
func (mr *MockURLDeleteServMockRecorder) DeleteUserURLs(ctx, ids, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUserURLs", reflect.TypeOf((*MockURLDeleteServ)(nil).DeleteUserURLs), ctx, ids, userID)
}
