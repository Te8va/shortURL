// Code generated by MockGen. DO NOT EDIT.
// Source: getter.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockURLGetterServ is a mock of URLGetterServ interface.
type MockURLGetterServ struct {
	ctrl     *gomock.Controller
	recorder *MockURLGetterServMockRecorder
}

// MockURLGetterServMockRecorder is the mock recorder for MockURLGetterServ.
type MockURLGetterServMockRecorder struct {
	mock *MockURLGetterServ
}

// NewMockURLGetterServ creates a new mock instance.
func NewMockURLGetterServ(ctrl *gomock.Controller) *MockURLGetterServ {
	mock := &MockURLGetterServ{ctrl: ctrl}
	mock.recorder = &MockURLGetterServMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLGetterServ) EXPECT() *MockURLGetterServMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockURLGetterServ) Get(ctx context.Context, id string) (string, bool, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(bool)
	return ret0, ret1, ret2
}

// Get indicates an expected call of Get.
func (mr *MockURLGetterServMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockURLGetterServ)(nil).Get), ctx, id)
}

// GetUserURLs mocks base method.
func (m *MockURLGetterServ) GetUserURLs(ctx context.Context, userID int) ([]map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserURLs", ctx, userID)
	ret0, _ := ret[0].([]map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserURLs indicates an expected call of GetUserURLs.
func (mr *MockURLGetterServMockRecorder) GetUserURLs(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserURLs", reflect.TypeOf((*MockURLGetterServ)(nil).GetUserURLs), ctx, userID)
}
